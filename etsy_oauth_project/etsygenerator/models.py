# etsygenerator/models.py
from django.db import models

class Receipt(models.Model):
    receipt_id = models.BigIntegerField(primary_key=True)
    receipt_type = models.IntegerField()
    seller_user_id = models.BigIntegerField()
    seller_email = models.EmailField()
    buyer_user_id = models.BigIntegerField()
    buyer_email = models.EmailField()
    name = models.CharField(max_length=255)
    first_line = models.CharField(max_length=255)
    second_line = models.CharField(max_length=255, blank=True, null=True)
    city = models.CharField(max_length=255)
    state = models.CharField(max_length=255, blank=True, null=True)
    zip = models.CharField(max_length=20)
    status = models.CharField(max_length=50)
    formatted_address = models.TextField()
    country_iso = models.CharField(max_length=2)
    payment_method = models.CharField(max_length=50)
    payment_email = models.EmailField(blank=True, null=True)
    message_from_payment = models.TextField(blank=True, null=True)
    message_from_seller = models.TextField(blank=True, null=True)
    message_from_buyer = models.TextField(blank=True, null=True)
    is_shipped = models.BooleanField()
    is_paid = models.BooleanField()
    create_timestamp = models.BigIntegerField()
    created_timestamp = models.BigIntegerField()
    update_timestamp = models.BigIntegerField()
    updated_timestamp = models.BigIntegerField()
    is_gift = models.BooleanField()
    gift_message = models.TextField(blank=True, null=True)

    def __str__(self):
        return f"Receipt {self.receipt_id}"

class Transaction(models.Model):
    transaction_id = models.BigIntegerField(primary_key=True)
    title = models.CharField(max_length=255)
    description = models.TextField()
    seller_user_id = models.BigIntegerField()
    buyer_user_id = models.BigIntegerField()
    create_timestamp = models.BigIntegerField()
    created_timestamp = models.BigIntegerField()
    paid_timestamp = models.BigIntegerField()
    shipped_timestamp = models.BigIntegerField(blank=True, null=True)
    quantity = models.IntegerField()
    listing_image_id = models.BigIntegerField()
    receipt = models.ForeignKey(Receipt, on_delete=models.CASCADE)
    is_digital = models.BooleanField()
    file_data = models.TextField(blank=True, null=True)
    listing_id = models.BigIntegerField()
    sku = models.CharField(max_length=255, blank=True, null=True)
    product_id = models.BigIntegerField()
    transaction_type = models.CharField(max_length=50)
    price_amount = models.DecimalField(max_digits=10, decimal_places=2)
    price_currency_code = models.CharField(max_length=3)
    shipping_cost_amount = models.DecimalField(max_digits=10, decimal_places=2)
    shipping_cost_currency_code = models.CharField(max_length=3)
    variations = models.JSONField()
    product_data = models.JSONField()
    shipping_profile_id = models.BigIntegerField()
    min_processing_days = models.IntegerField()
    max_processing_days = models.IntegerField()
    shipping_method = models.CharField(max_length=255, blank=True, null=True)
    shipping_upgrade = models.CharField(max_length=255, blank=True, null=True)
    expected_ship_date = models.BigIntegerField()
    buyer_coupon = models.IntegerField()
    shop_coupon = models.IntegerField()

    def __str__(self):
        return f"Transaction {self.transaction_id} for Receipt {self.receipt.receipt_id}"
